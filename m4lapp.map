{"version":3,"file":"app-build/m4lapp.js","sources":["app/m4lapp.js"],"names":[],"mappings":"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","sourceRoot":"app-build/","sourcesContent":["\n//return;\n\n// MAX/MSP INITThomash\n\n\nautowatch = 1;\ninlets = 2;\noutlets = 3;\n\n\n// Making MAX more compatible with other libraries\n\n\n\nfunction anything(val) {\n \tlog(messagename+\" \"+val+\"\\n\");\n};\n\nvar userFunc = null;\nvar scheduledEvents = Lazy();\nvar userFuncUpdated = false;\n\nfunction text(code) {\n  log(\"code:\",code);\n  var es5code =  traceur.Compiler.script(code);\n  console.log(\"compiled\",es5code);\n  userFunc = new Function(\"log\",\"time\",\"osc\",\"events\",\"control\",\"sequencer\",es5code);\n  let beautified = js_beautify(code, { indent_size: 2 });\n  log(\"beautified\",beautified);\n  outlet(1,[\"set\",code]);\n  userFuncUpdated = true;\n};\n\n\nfunction getDeviceParamController() {\n  return function(param,value) {\n    //outlet(0,value*127);\n    //log(value);\n    outlet(0,\"param\"+param+\" \"+(value*127));\n  }\n}\n\nfunction neighbourPath(this_device,offset) {\n\tvar path = this_device.path.split(\" \");\n\tlog(path);\n\tvar rightDeviceNo = path[path.length-1];\n\tpath[path.length-1] = \"\"+(parseInt(rightDeviceNo)+offset);\n\tlog(path);\n\tvar newPath = path.join(\" \")\n\treturn newPath;\n}\n\nvar syncedOscillators = function() {\n\tvar globalTime = 0;\n\tvar syncedOscs = {};\n    Object.keys(OZ).forEach(function(key) {\n\t\t\tsyncedOscs[key] = function(rate, optionalTime) {\n\t\t\t\tvar osc = OZ[key];\n\t\t\t\tvar time = (arguments.length>1 ? optionalTime : globalTime);\n\n\t\t\t\treturn osc(time, rate);\n\t\t\t};\n\t\t}\n\t);\n\tsyncedOscs.updateTime = function (time) {\n\t\tglobalTime = time;\n\t};\n\treturn syncedOscs;\n}\n\nvar tickListeners = [];\nfunction tick(rawTicks) {\n\tif (tickListeners == null)\n\t  return;\n\ttickListeners.forEach( function(listener) {\n\t  listener(rawTicks);\n\t});\n}\n\nvar oscillators = function(gTime) {\n\tvar syncedOscs = {};\n    Object.keys(OZ).forEach(function(key) {\n\t\t\tsyncedOscs[key] = function(rate, optionalTime) {\n\t\t\t\tvar osc = OZ[key];\n\t\t\t\tvar time = (arguments.length>1 ? optionalTime : gTime);\n\t\t\t\t//log(osc,time,rate);\n\t\t\t\treturn osc(time, rate);\n\t\t\t};\n\t\t}\n\t);\n\treturn syncedOscs;\n}\n\n\nfunction getUserNoteScheduler() {}\n\n\nvar playingNotes = null;\n\nfunction userNote(pitch, velocity, startTime, duration) {\n  if (!playingNotes)\n    playingNotes = new Map();\n  playingNotes.set()\n}\n\n\n\nfunction controlSequenceGenerator(time) {\n\tvar control = {}\n\tfunction controlValues(c,v) {\n\t\tcontrol[c] = v;\n\t}\n\tcontrol.time = time\n\tuserFunc(log,time,oscillators(time),scheduledEvents,controlValues,tomSequencer);\n\treturn control;\n}\n\n\nLazy.ArrayLikeSequence.define(\"controlSequence\", {\n\n   init: function() {},\n   get: function(i) {\n\t\treturn controlSequenceGenerator(i/1000.0);\n   },\n   length: function() {\n     return undefined;\n   }\n});\n\n\n\nvar remoteParamCount=8;\nfunction mapDevice(path) {\n  for (var i=1;i <= remoteParamCount; i++) {\n    var right_device_param = new LiveAPI(path+\" parameters \"+i);\n    outlet(0,\"param\"+i+\" id \"+right_device_param.id);\n    log(\"mapped param with id\"+right_device_param.id);\n  }\n}\n\nfunction midiInstrument() {\n  let playingNotes = new Set();\n  return {\n    play: (event) => {\n      playingNotes.add(event);\n      outlet(2,[event.pitch, event.velocity])\n    }\n  }\n}\n\n\n\nfunction deviceReady() {\n  tickListeners = [];\n\n  log(\"device ready, initing!\");\n\n  var this_device = new LiveAPI(\"this_device\");\n\n // printobj(this_device);\n\n  // map params of right device\n  var rightPath = neighbourPath(this_device,1);\n  mapDevice(rightPath);\n  paramController = getDeviceParamController();\n  var syncedOscs = syncedOscillators();\n  song = new LiveAPI(\"live_set\");\n\n  //var userControlSequence = Lazy([]).controlSequence();\n  //log(userControlSequence);\n  //log(\"initial\",userControlSequence.length());\n\n  var currentTime=-1;\n\n  var TomMusicScheduler = function() {\n    return {\n      getNextStartTime: () => Math.floor(currentTime+1)\n    }\n  };\n  var tomSequencer = TomSequencer(TomMusic,TomMusicScheduler(),midiInstrument() )\n  function timeChanged(globalTime) {\n    currentTime = globalTime/1000.0;\n\n    if (userFuncUpdated) {\n      userFuncUpdated = false;\n      log(\"evaluating user function\");\n      userFunc(log,currentTime,oscillators(currentTime),scheduledEvents,null,tomSequencer.createSequence);\n    }\n\n    tomSequencer.triggerEvents(currentTime);\n\t//var beatsInfo = song.call(\"get_current_beats_song_time\").split('.');\n\t//var timeInfo = {beats: beatsInfo, time: globalTime, tempo: song.get(\"tempo\")[0]}\n    //console.log(userFunc);\n\t//syncedOscs.updateTime(globalTime);\n\n    return;\n    console.log(globalTime,userControlSequence.get(Math.floor(globalTime)));\n\t//log(userControlSequence);\n\t//if (userFunc != null)\n\t//\tconsole.log(\"current control\",userControlSequence.first());\n\t//log(\"timeChanged\",);\n\n  }\n  tickListeners.push(timeChanged);\n  //song.property = \"current_song_time\";\n\n\n\n\n}\n"]}