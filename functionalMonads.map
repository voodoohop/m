{"version":3,"file":"app-build/functionalMonads.js","sources":["app/functionalMonads.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","sourceRoot":"app-build/","sourcesContent":["\n\n// TODO: add sanity checks and user understandable errors in every method\n\nimport {wu} from \"./wu\";\n\nimport {prettyToString,toStringObject,toStringDetailed,addFuncProp, clone, addObjectProp, addObjectProps, isIterable, getIterator,fixFloat, cloneableEmptyObject} from \"./utils\";\n\nvar _ = require(\"lodash\");\n\nvar memoize = require('memoizee');\n\nvar SortedMap = require(\"collections/sorted-map\");\n\nvar getIterators = (values) => values.map(getIterator);\n\nvar iteratorNextVal = (iterator) => iterator.next().value;\n\nvar iteratorNextValLooping = (value, iterator) => {\n  var nextVal = iterator.next().value;\n  return nextVal == undefined ? iteratorNextValLooping(value,getIterator(value)) : [nextVal, iterator];\n};\n\nvar loopValue = function*(value) {\n  var iterator = getIterator(value);\n  while (true) {\n    var nextVal = null;\n    [iterator, nextVal] = iteratorNextValLooping(value, iterator);\n    yield nextVal;\n  }\n}\n\n// last argument is the child node\n// var mergeDiscreteLooping = function*(propNames,tomValues,child) {\n//   var loopers = tomValues.map(loopValue);\n//   while (true) {\n//     var nextValues = loopers.map(iteratorNextVal);\n//     yield ;\n//   }\n// }\nvar loopGeneratorArgs = function(generatorProducer, args) {\n  var node = args[args.length-1];\n\n}\n\n// // TODO: work in progress\n// TODO: change to one option param\nvar mGenerator = function(generatorProducer, name, curryArgCount = 0, toStringOverride=null) {\n\n  var genProducer = function(...args) {\n    var res = Object.create(null);\n    res.isTom = true;\n    res.name = name;\n\n\n    res[wu.iteratorSymbol] = () => generatorProducer(...args);//loopGeneratorArgs(generatorProducer, args);\n    if (toStringOverride)\n      res.toString = () => toStringOverride;\n    else\n      prettyToString(name,args,res);\n\n\n\n    return res;\n  };\n  genProducer.producerName = name;\n  //console.log(\"constructed node\",generatorProducer,name);\n  return curryArgCount > 0 ? wu.curryable(genProducer, curryArgCount) : genProducer;\n}\n\n\n\n\nvar MData = mGenerator(function*(data) {\n\n\n  if (isIterable(data)) {\n    for (var d of data) {\n      // console.log(\"data:\",d);\n      yield* getIterator(MData(d));\n    }\n  } else {\n    var dataObj;\n    if (data instanceof Object) {\n      dataObj = _.clone(data);\n\n      // if (!dataObj.prototype)\n      //   dataObj.prototype = {\n      //     toString: () => toStringDetailed(data)\n      //   };\n      // else\n      if (isIterable(data))\n        throw \"Errrrroorr data shouldn't be iterable\";\n      //delete dataObj.toString;\n      Object.defineProperty(dataObj,\"toString\", {enumerable:false,value:() => toStringDetailed(data)});\n      // if (dataObj.prototype)\n      //   dataObj.prototype.toString = data.toString;\n      // dataObj = data;\n    }\n    else {\n      dataObj = {type:\"value\", valueOf: () => data};\n    }\n    yield dataObj;\n  }\n},\"data\");\n\n\nfor (var e of MData([{pitch:12, velocity:0.5},{bla:2}]))\n  console.log(\"datatest\",e);\n\n\n// TODO: remove this data generator nonsense? if it's not used later yes!\nvar MLoopData = mGenerator( function*(dataNode) {\n  for (var data of dataNode) {\n    var keys = Object.keys(data);\n\n    if (keys.length == 0) {\n      yield* getIterator(MLoop(dataNode));\n      return;\n    }\n\n    for (var props of MZip(..._.values(data))) {\n      //console.log(zippedProps);\n      var resData = {};\n      props.forEach(function(val,i) {\n        //val = Object(val);\n        resData[keys[i]] = val;\n      });\n      //resData._data = data;\n      yield resData;\n    }\n  }\n},\"loopData\");\n\n\nvar MMergeZipped = mGenerator(function*(node) {\n  for (var n of node)\n    yield addObjectProps(n[0], n[1]);\n},\"mergeZippedObjects\");\n\nvar MMerge = mGenerator(function*(node1,node2) {\n    var iterators = [node1,node2].map((node) => getIterator(node));\n    while (true) {\n      var next = iterators.map((i) => i.next().value);\n      if (next[0] == undefined || next[1] == undefined)\n        return;\n      // console.log(\"addobprops\",next[0], next[1]);\n      yield addObjectProps(next[0], next[1]);\n    }\n},\"mergeObjects\");\n\nvar MSet = mGenerator(function*(data, node) {\n yield* getIterator(MMerge(node, MLoopData(MData(data))));\n},\"set\");\n\n\n// TODO: if we leave out the shallow check we automatically have a flatmap (Maybe??)\nvar MEvent = mGenerator(function*(data) {\n  // here if data is iterable we are not looping individual properties\n  if (isIterable(data)) {\n    for (var e of MLoop(data))\n      yield* getIterator(MData(e));\n  }\n  else\n    yield* getIterator(MLoopData(MData(data)));\n},\"evt\");\n\n\nvar MProperty = mGenerator(function* (name,tomValue, children) {\n  yield* getIterator(MSet({[name]:tomValue},children));\n},\"prop\", 3);\n\n\nvar MWithNext = mGenerator(function* (node) {\n  var me = null;\n  for (var n of node) {\n    if (me==null) {\n      me = n;\n      continue;\n    }\n    // console.log({me:me,next:n, time:me.time });\n    yield addObjectProps(me, {next:n});\n    me=n;\n  }\n},\"withNext\")\n\nvar MGroupTime = mGenerator(function*(node) {\n  var currentTime=-1;\n  var grouped=[];\n  //console.log(\"\"+node);\n  for (var n of node) {\n    if (!n.hasOwnProperty(\"time\")) {\n      console.error(\"groupByTime called but no time property\".red);\n      return;\n    }\n    if (n.time > currentTime) {\n\n      if (grouped.length > 0) {\n        yield {events: grouped, time:currentTime};\n        grouped = [];\n      }\n      currentTime = fixFloat(n.time);\n    }\n    grouped.push(n);\n  }\n},\"groupByTime\");\n\nvar MDuplicateRemover = mGenerator(function*(node) {\n\n\n  for (var timeGrouped of MGroupTime(node)) {\n\n    //console.log(_.groupBy(timeGrouped, \"pitch\"));\n    for (var n of _.values(_.groupBy(timeGrouped.events, \"pitch\")))\n      yield n[n.length-1]; // last one... could be first too\n\n  }\n\n},\"removeDuplicateNotes\");\n\n\n\n\n\nvar MNoteAutomate = mGenerator(function*(node) {\n  // console.log(MToArray(MTake(2,node)));\n\n  var notes = MFilter((n) => n.hasOwnProperty(\"pitch\") && n.hasOwnProperty(\"velocity\") && n.hasOwnProperty(\"time\") && n.duration>0, node);\n  // console.log(MToArray(MTake(2,notes)));\n\n  // console.log(\"notes\", m.data(notes).take(5).toArray());\n  yield* getIterator(MMapOp((n) => {\n    // var automationHolder = n.hasOwnProperty(\"children\") ? n.children : Object.create(null);\n    var automation = m.data([{type:\"noteOn\", velocity:n.velocity, pitch: n.pitch, time: 0, evt:n}, {type: \"noteOff\", pitch: n.pitch, time: n.duration, evt: n}]);\n    automation.automation = true;\n    // console.log(\"returing automation\",{[\"automation_note\"]: automation});\n    return {[\"automation_note\"]: automation};\n  },\n  MDuplicateRemover(notes)));\n},\"notePlay\");\n\n\n//TODO: figure out how to deal with automations of notes that overlap in duration. at the moment automations are overlapping\nvar MAutomate = mGenerator(function*(paramName, valGenerator, node) {\n  yield* getIterator(MMapOp((n) => {\n    // var automationHolder = n.hasOwnProperty(\"children\") ? n.children : Object.create(null);\n    var automation = m.data({type:\"automation\", evt: n, name: paramName, duration: n.duration}).loop()\n      .metro(1/8)\n    //  .log(\"automation\")\n      .takeWhile((a) => a.time < a.evt.duration)\n      .set({automationVal: valGenerator});\n\n    automation.automation = true;\n    return {[paramName]: automation};\n  },node));\n},\"automate\");\n\n\n\nvar MProcessAutomations = mGenerator(function*(node) {\n  // if (MToArray(MNoteAutomate(MTake(100,node))).length ==0)\n  //   throw \"no notes to automate\";\n\n  yield* getIterator(MCache(MFlattenAndSchedule(MSimpleMap( (n) => {\n    var merged = m.data([]);\n    for (var automation of _.filter(_.values(n), (nVal) => Object(nVal).automation === true)) {\n      // console.log(\"processing automation\",automation.toArray());\n      // throw \"hey\";\n        merged = merged.merge(automation);\n    }\n    // console.log(\"mapping\",n);\n    // console.log(\"returning for flatten and schedule\", {time:n.time, events: merged.delay(n.time).toArray()});\n    return {time:n.time, events: merged.delay(n.time)};\n  }, MNoteAutomate(node)))));\n\n},\"processAutomations\");\n\n\nvar MCache = function(node) {\n  // return node;\n  var cached=[];\n  var cacheLimit = 100000;\n  var iterator = getIterator(node);\n  var gen = mGenerator(function*(node) {\n    var count = 0;\n    while (true) {\n      if (cached.length<=count || count > cacheLimit) {\n        var n = iterator.next();\n        if (n.done)\n          break;\n        if (count > cacheLimit) {\n          yield n.value;\n          continue;\n        }\n        cached.push(n.value);\n      }\n      yield cached[count++];\n    }\n\n  }, \"cache\");\n  return gen(node);\n}\n\n\n// var MAutomatePlay = mGenerator(function*(propName,node) {\n//   for (var v of node) {\n//     var play = mGenerator(function* () {\n//       //console.log(\"called playMethod of automateplay\");\n//\n//\n//       return baconTime\n//         .skipWhile((t) => t.time < v.time)\n//         .takeWhile((t) => v.duration ? t.time < v.time + v.duration : true)\n//\n//         .map((t) => {\n//           //console.log(\"returning automateplay function\",v[name]);\n//           return function(instrument) {\n//             //console.log(\"calling instrument\", );\n//             instrument.param(name, v[name](t.time,v), t.time + t.offset)\n//           };\n//         });\n//     },\"automationPlayer\");\n//     var playerObj = _.extend({},v.instrumentPlayers, {[name]: playMethod})\n//     yield addObjectProp(v, \"instrumentPlayers\", playerObj);\n//   }\n// },\"automatePlay\",2);\n\n\nvar MSetValue = mGenerator(function* (value, child) {\n//  console.log(\"MSetValue\", value, child);\n  yield* MProperty(\"value\", value, child);\n},\"setValue\", 2);\n\n\n\nvar MZip = mGenerator(function*(...nodes) {\n  var loopedIterators = nodes.map((node) => getIterator(MLoop(node)));\n  while (true) {\n    var next = loopedIterators.map((i) => i.next().value);\n    yield next;\n  }\n},\"zip\");\n\n\n\nvar MLoop = mGenerator(function*(node) {\n  // var cached = [];\n  //\n  // for (var e of node) {\n  //   cached.push(e);\n  // //  console.log(\"caching\",e);\n  // }\n  // console.log(\"cached\",cached);\n  //\n  // while (true) {\n  //   yield* getIterator(cached);\n  // }\n  var cached = null;\n  while (true) {\n    //console.log(\"\"+node);\n    if (isIterable(node)) {\n      if (cached==null)\n        cached = MCache(node);\n      yield* getIterator(cached);\n    }\n    else  {\n      // this is an optimization\n      //console.warn(\"using mloop on non-iterable\");\n      yield node;\n\n    }\n  }\n},\"loop\");\n\n\n\n\n\n\n\nvar simpleMap = mGenerator(function* (mapFunc, node) {\n  for (var n of node) {\n    yield mapFunc(n);\n  }\n},\"simpleMap\");\n\n\n\nvar MCombine = mGenerator(function*(combineNode,node) {\n    var combineFunc = (me, previousOther,nextOther) => addObjectProps(me, {other: {previous: previousOther, next: nextOther}});\n    var meMapped = simpleMap((n) => {return {time: n.time, me: n}}, node);\n    var otherMapped = simpleMap((n) =>{return {time: n.time, other: n}}, combineNode);\n    var merged = MTimeOrderedMerge(meMapped,otherMapped);\n    // for (var test of merged)\n    //   console.log(\"mergedSeq\", test);\n    var previousOther = null;\n    var nextOther = null;\n    var meWaitingForNextOther = [];\n    for  (var m of merged) {\n      // console.log(\"combining\",m);\n      if (m.hasOwnProperty(\"me\"))\n        meWaitingForNextOther.push(m.me);\n      if (m.hasOwnProperty(\"other\") && meWaitingForNextOther.length > 0) {\n        previousOther = nextOther;\n        nextOther = m.other;\n        for (var me of meWaitingForNextOther) {\n          yield combineFunc(me, previousOther, nextOther);\n        }\n        meWaitingForNextOther = [];\n      }\n    }\n    for (var me of meWaitingForNextOther) {\n      yield combineFunc(me, previousOther, nextOther);;\n    }\n},\"combine\");\n\nvar MCombineMap = mGenerator(function*(combineFunc,combineNode,node) {\n  // here we could add time diffs to parameters of combineFunc\n  yield* getIterator(MMapOp((combined) => combineFunc(combined,combined.other), MCombine(combineNode,node)));\n},\"combineMap\",3);\n\n\n// var MCombine2 = mGenerator(function*(combineFunc, combineNode,node) {\n//   var cIterator = getIterator(combineNode);\n//   var cNext = [];\n//   cNext.push(cIterator.next().value);\n//   cNext.push(cIterator.next().value);\n//   for (var n of node) {\n//     // make it do a zip in case of no time value present ( later)\n//     //if (cNext[0].time == undefined || cNext[1].time == undefined || n.time == undefined)\n//     while (n.time > cNext[1].time) {\n//       cNext.shift();\n//       cNext.push(cIterator.next().value);\n//     }\n//\n//     if (n.time <= cNext[1].time) {\n//       if (n.time < cNext[0].time)\n//         combineFunc({prev: undefined, next: cNext[0]});\n//       else\n//         if (n.time > cNext[0].time && n.time <= cNext[1].time)\n//           combineFunc({prev:cNext[0], next: cNext[1]});\n//     }\n//\n//   }\n// },\"combine\",3);\n\n\nvar MCompose = mGenerator(function*(...nodes) {\n    for (var node of nodes) {\n      yield* getIterator(node);\n    }\n},\"compose\");\n\n\n\nvar MLoopFixedLength = mGenerator(function*(loopLength,node) {\n  var time=0;\n  while (true) {\n    for (var n of node) {\n    //  console.log(\"looplengtime\",time);\n      yield addObjectProp(n, \"time\", time+n.time);\n    }\n    time+=loopLength;\n  }\n}, \"loopLength\",2);\n\nvar convertToObject = (externalVal) => Object(externalVal);\n\n\nvar MSimpleMap = mGenerator(function*(mapFunc,node) {\n  for (var e of node) {\n    // console.log(\"mapping\",e);\n    yield mapFunc(e);\n    // console.log(\"after mapping\",e);\n    //throw \"hey\";\n  }\n},\"simpleMap\");\n\n\nvar MFlattenAndSchedule = mGenerator(function* (node) {\n  var scheduled = new SortedMap();\n  for (var n of node) {\n    //console.log(n);\n    if (n.hasOwnProperty(\"time\")) {\n      var scheduledNow = _.take(scheduled.entries(), (s) => s[0] < n.time);\n      //console.log(scheduledNow);\n      for (var scheduledEvents of scheduledNow) {\n\n        for (var scheduledEvent of scheduledEvents[1]) {\n          yield scheduledEvent;\n        }\n        scheduled.delete(scheduledEvents[0]);\n      }\n    }\n    else\n      console.error(\"Flatten and Schedule should work on events with time set\");\n    // if (!isIterable(n))\n    //   n=[n];\n    for (var nFlat of n.events) {\n  //    console.log(nFlat);\n      if (nFlat.hasOwnProperty(\"time\")) {\n        if (nFlat.time <= n.time)\n          yield nFlat;\n        else {\n          if (!scheduled.has(nFlat.time))\n            scheduled.set(nFlat.time, []);\n          scheduled.get(nFlat.time).push(nFlat);\n        }\n      }\n      else\n        console.error(\"Flatten and Schedule should work on events with time set\");\n    }\n  }\n\n  yield* getIterator(scheduled.values());\n},\"flattenAndSchedule\");\n\n\nvar MFlattenShallow = mGenerator(function*(node) {\n  for (var n of node) {\n    if (isIterable(n))\n      yield* getIterator(n);\n    else\n      yield n;\n  }\n},\"flattenShallow\");\n\nvar MMapOp = mGenerator(function*(mapFunc,node) {\n  var mapped = MSimpleMap(mapFunc,node);\n\n  var timed=false;\n\n  var merged = MSimpleMap((e) => {\n    var mappedRes = MData(e[1]);\n    var orig = e[0];\n    //console.log(\"merging\",orig,\"mappedRes\", mappedRes);\n    var res = {events: MSimpleMap((m) => addObjectProps(orig,m), mappedRes)};\n\n    if (orig.hasOwnProperty(\"time\")) {\n      res.time = orig.time;\n      timed = true;\n    }\n\n    return res;\n  }, MZip(node, mapped));\n\n\n  // for (var z of MTake(5,merged))\n  //   console.log(\"merged\",z);\n  if (timed)\n    yield* getIterator(MFlattenAndSchedule(merged));\n  else\n    yield* getIterator(MFlattenShallow(MSimpleMap((e) => e.events,merged)));\n});\n\n\n// somehow like sequencer\nvar MCombineLast = mGenerator(function*(combineFunc, combineNode, node) {\n  var meIterator = getIterator(node);\n  //var meNext = null;\n  var last = meIterator.next().value;\n  for (var c of combineNode) {\n    var next = meIterator.next();\n    if (next.time < c.time) {\n      last = next;\n      continue;\n    }\n    yield combineFunc(last,next,combineNode);\n\n    last = next;\n  }\n});\n\n\nvar MFlatten = mGenerator(function*(node) {\n  for (var e of node)\n    if (isIterable(e))\n      yield* getIterator(MFlatten(e))\n    else\n      yield e;\n},\"flatten\");\n\n\nvar MSubSequence = mGenerator(function*(subSequence,node) {\n    // change yield* to iterating through subSequence\n    yield* node;\n    yield* subSequence;\n},\"subSequence\");\n\nvar MPluck = mGenerator(function*(propertyName, node) { yield* getIterator(MMapOp(e => e[propertyName], node))},\"pluck\",2);\n\nvar MMapWithMemory = mGenerator(function*(initial, mapFunc,node) {\n  var current = initial;\n  yield* getIterator(MSet(convertToObject(current), MData(current)));\n  for (var e of node) {\n    current = mapFunc(current, e.value);\n  //  console.log(\"current\",current);\n    yield* getIterator(MSet(convertToObject(current), MData(e)));\n  }\n},\"memoryMap\",3);\n\n\nvar MFilter = mGenerator(function*(filterFunc,node) {\n  for (var e of node) {\n    if (filterFunc(e))\n      yield e;\n  }\n},\"filter\",2);\n\n\n\nvar MTakeWhile = mGenerator(function*(filterFunc,node) {\n  for (var e of node) {\n    if (!filterFunc(e))\n      break;\n    yield e;\n  }\n},\"takeWhile\",2);\n\nvar MSkipWhile = mGenerator(function*(skipFunc,node) {\n  var skipNo=0;\n  for (var e of node) {\n    if (skipFunc(e)) {\n      continue;\n    }\n    yield e;\n  }\n},\"skipWhile\",2);\n\n\nvar MTake = mGenerator(function*(n,node) {\n    var count = n;\n    // console.log(\"mtake\",node,n);\n    for (var e of node) {\n      yield e;\n      if (--count <= 0)\n        break;\n    }\n},\"take\",2);\n\nvar MTakeTime = mGenerator(function*(time,node) {\n    var timeTaken=0;\n    for (var e of node) {\n      yield e;\n      timeTaken += e.event.duration;\n      if (timeTaken>=time)\n        break;\n    }\n},\"takeTime\",2);\n\nvar MRepeat = mGenerator(function*(n, node) { yield* getIterator(MTake(n, MLoop(node)));},\"repeat\",2);\n\nvar MMapTime = mGenerator(function*(mapFunc,node) {\n  for (var e of node) {\n    yield e.set(\"time\", mapFunc(e.time));\n  }\n},\"mapTime\",2);\n\nvar MTimeShift = mGenerator((amount,node) => MMapTime((time) => time + amount, node),\"timeShift\",2);\n\nvar MReduce = mGenerator(function*(reduceFunc, startValue,node) {\n    var current = startValue;\n    for (var e of node) {\n      current = reduceFunc(_.clone(current), e);\n    }\n    yield _.clone(current);\n},\"reduce\", 3);\n\n\nvar MDurationSum = mGenerator(MReduce((sum, timedEvent) => sum + timedEvent.duration, 0),\"durationSum\");\n\n\nvar MSkip = mGenerator(function*(n,node) {\n  var count = n;\n  for (var e of node) {\n    if (count > 0)\n      count--;\n    else\n      yield e;\n  }\n}, \"skip\",2);\n\nvar MBranch = mGenerator(function*(condition, branchNode, elseNode, node) {\n    for (var e of node) {\n      //console.log(\"branching\", condition, e);\n      var branchTo = (condition(e) ? branchNode:elseNode);\n\n      //console.log(e,branchTo.set);\n      yield* getIterator(branchTo.takeWhile((n) => n.time < e.duration).set({time:(n)=>n.time+e.time}));\n      //yield* getIterator(branchTo\n      //  .takeWhile((n) => n.time < e.duration)\n      //  .set((n) => {time: n.time+e.time})\n      //);\n    }\n},\"branch\",4);\n\n\n\nvar MCount = mGenerator(function*(start=0,stepSize=1) {\n    var c = start;\n    while(true) {\n      yield c;\n      c += stepSize;\n    }\n},\"count\");\n\nvar MSequenceEndMarker = mGenerator(function* () { yield* getIterator(MEvent({type: \"endMarker\" }))},\"endMarker\");\n\nvar MPitch = MProperty(\"pitch\");\nvar MVelocity = MProperty(\"velocity\");\nvar MTime = MProperty(\"time\");\nvar MDuration = MProperty(\"duration\");\nvar MEventCount = MProperty(\"count\", MCount(0,1));\n\nvar MDelay = mGenerator(function*(amount,node) {\n  //console.log(\"delaying\", node.toArray());\n  if (!isIterable(amount))\n    amount = [amount];\n\n  for (var a of amount)\n    yield* getIterator(MProperty(\"time\", (n) => n.time + a, node));\n},\"delay\");\n\n\n// maybe possible to modify event properties to have iterables with time somehow connecting to time of external events\nvar MExternalProperty = mGenerator(function*(propName, baconProp, initialVal, node) {\n  var propVal = initialVal;\n  // set up bacon listener\n  baconProp.onValue(function(v) { console.log('new param val',propName,v); propVal = v; });\n\n  var res = MProperty(propName, () => propVal, node);\n\n  yield* getIterator(res);\n},\"externalProperty\",3,\"externalProp\");\n\n\nvar MMetronome = mGenerator(function*(tickDuration,node) { yield* getIterator(MTime( MCount(0, tickDuration), MCompose(node,MSequenceEndMarker())));},\"metro\");\n\nvar MTimeFromDurations = mGenerator(function*(node)   {\n  var durationSumIterator = MMapWithMemory(0, (current, x) => x + current, MPluck(\"duration\", node));\n  yield* getIterator(MTime(durationSumIterator, MCompose(node, MSequenceEndMarker())));\n},\"timeFromDurations\");\n\n\nvar MDurationsFromTime = mGenerator(function*(node) {\n  var i = getIterator(node);\n  var previous = undefined;\n  while (true) {\n      var next = i.next().value;\n      if (next === undefined)\n        return;\n      if (previous != undefined && previous.hasOwnProperty(\"time\") && next.hasOwnProperty(\"time\")) {\n        yield addObjectProps(previous, {duration: next.time - previous.time- 0.01});\n      }\n      previous = next;\n  }\n});\n\n// var MInsertWhen = MDirectOp(\n//   function* (nodeIterator, insertCondition, insertNode) {\n//     for (var e of nodeIterator) {\n//       if (insertCondition(e))\n//         yield* insertNode;\n//       yield e;\n//     }\n//   }\n// )\n\n\n// before insert, could make explicit\n//var MInsertOnce = (insertCondition, insertNode, node) => MCompose(MTakeWhile(e => !insertCondition(e),node), insertNode, MSkipWhile(e => !insertCondition(e),node));\n\n\n\nvar MTimeOrderedMerge = mGenerator(function*(mergeNode,node) {\n    var nodeIterator=getIterator(node);\n    var nextNode = nodeIterator.next().value;\n    for (var mergeEvent of mergeNode) {\n      while (nextNode != undefined && nextNode.time < mergeEvent.time) {\n        yield nextNode;\n        nextNode = nodeIterator.next().value;\n      }\n      yield mergeEvent;\n    }\n    if (nextNode != undefined)\n      yield nextNode;\n    yield* nodeIterator;\n}, \"merge\");\n\n\n\n// safe and ordered NoteOnOffSequence generator which doesn't cause StackOverflows. not very functionally elegant;\nvar MNoteOnOffSequence = mGenerator(function*(node) {\n    var iterator = getIterator(node);\n    var next = null;\n    var toInsert = {};\n    while (next = iterator.next().value) {\n      var ks = Object.keys(toInsert)\n      for (var time of ks) {\n        if (time < next.time) {\n          yield* toInsert[time];\n          delete toInsert[time];\n        }\n      }\n      if (next.type == \"note\") {\n        //console.log(next.set(\"type\", \"noteOn\"));\n        yield addObjectProp(next,\"type\", \"noteOn\");\n        //console.log(\"next\",next,next.time);\n        var noteOffTime = next.time + next.duration-1;\n\n        var noteOff =  MEvent({type:\"noteOff\", pitch: next.pitch, time: noteOffTime});\n        //console.log(\"inserting noteOff\", noteOff)\n        toInsert[noteOffTime] = noteOff;\n      } else {\n        yield next;\n      }\n    }\n},\"noteOnOff\");\n\nvar MSwing = mGenerator(function*(timeGrid, amount, node)  {\n  yield* getIterator(MTime((e) => {\n    // console.log(\"swing, mapping,\",e);\n    var diff = (e.time % (timeGrid*2))/timeGrid-1;\n\n    var dist = diff*diff;\n    // console.log(\"swing\", {time: fixFloat(e.time + amount * (1-dist) * timeGrid)});\n    return fixFloat(e.time + amount * (1-dist) * timeGrid);\n  }\n,node))},\"swing\",3);\n\nvar MQuantize = mGenerator(function*(timeGrid, amount, node)  {\n  yield* getIterator(MTime((e) => {\n    // console.log(\"swing, mapping,\",e);\n    var diff = (e.time % (timeGrid*2))/timeGrid-1;\n\n\n    // console.log(\"swing\", {time: fixFloat(e.time + amount * (1-dist) * timeGrid)});\n    return fixFloat(e.time - amount * diff);\n  }\n,node))},\"quantize\",3);\n\n\nvar MLog = mGenerator(function*(name, node){\n  for (var e of node) {\n    console.log(name, e);\n    yield e;\n  }\n},\"log\");\n\n// var MPlay = function(sequencer,node) {\n//   // console.log(\"playing, showing first five notes here\",\"\"+node);\n//   // for (var e of node.take(5)) {\n//   //   console.log(\"note\",e);\n//   // }\n//   //console.log(\"converting to noteOnOff\");\n//   //var noteOnOff = node.toNoteOnOff();\n//   //console.log(\"converted to noteOnOff\");\n//   console.log();\n//   console.log();\n//   console.log(\"playing, showing first five notes here\");\n//   console.log(\"--------------------------------------\")\n//   console.log(\"\"+node);\n//   console.log(\"--------------------------------------\")\n//   for (var e of node.take(4)) {\n//     console.log(\"note\",e);\n//   }\n//   var s = sequencer(node);\n//\n//   console.log(\"returning sequencer\");\n//   return s;\n// }\n//\n//\n// var nextLooping = wu.curryable(function(generator,iterator) {\n//   var next = iterator.next();\n//   var newIterator = iterator;\n//   if (next.done) {\n//     newIterator = getIterator(generator);\n//     next = newIterator.next();\n//     if (next.done)\n//       console.error(\"it seems like we are trying to loop an iterator that doesn't yield any values\");\n//   }\n//   return {newIterator, next}\n// });\n\n\n\n\nvar MBjorklund = mGenerator(function*(steps, pulses, rotation,node) {\n  var pattern = bjorklund(steps,pulses);\n  var counter =rotation;\n  console.log(pattern,steps,pulses);\n  if (pattern.length==0)\n    pattern=[1];\n  for (var n of node) {\n    if (pattern[counter++ % pattern.length])\n      yield n;\n  }\n},\"bjorklund\",4);\n\nfunction bjorklund(steps, pulses) {\n\n\tsteps = Math.round(steps);\n\tpulses = Math.round(pulses);\n\n\tif(pulses > steps || pulses == 0 || steps == 0) {\n\t\treturn new Array();\n\t}\n\n\tvar pattern = [],\n\t   counts = [],\n\t   remainders = [],\n\t   divisor = steps - pulses;\n\tremainders.push(pulses);\n\tvar level = 0;\n\n\twhile(true) {\n\t\tcounts.push(Math.floor(divisor / remainders[level]));\n\t\tremainders.push(divisor % remainders[level]);\n\t\tdivisor = remainders[level];\n\t       level += 1;\n\t\tif (remainders[level] <= 1) {\n\t\t\tbreak;\n\n\n\t\t}\n\t}\n\n\tcounts.push(divisor);\n\n\tvar r = 0;\n\tvar build = function(level) {\n\t\tr++;\n\t\tif (level > -1) {\n\t\t\tfor (var i=0; i < counts[level]; i++) {\n\t\t\t\tbuild(level-1);\n\t\t\t}\n\t\t\tif (remainders[level] != 0) {\n\t        \tbuild(level-2);\n\t\t\t}\n\t\t} else if (level == -1) {\n\t           pattern.push(0);\n\t\t} else if (level == -2) {\n           pattern.push(1);\n\t\t}\n\t};\n\n\tbuild(level);\n\treturn pattern.reverse();\n}\n\n\nfunction MToArray(node) {\n  var res=[];\n  for (var n of node)\n    res.push(n.valueOf());\n  return res;\n}\n\n\nvar makeChainable = function (lib,name,funcToChain) {\n  return function(...args) {\n    var result = funcToChain(...args);\n    _.each(lib,(origFunction, origFunctionName) => {\n        result[origFunctionName] = function(...chainedArgs) {\n          chainedArgs.push(result);\n          var res = lib[origFunctionName](...chainedArgs);\n          return res;\n        };\n    });\n    return result;\n  }\n}\n\nexport var FunctionalMusic = function() {\n    var lib = {};\n\n    var addFunction = function(name,func, chaining=true) {\n      func.prototype = _.clone(func.prototype);\n      func.prototype.toString = () => name;\n\n      lib[name] = chaining ? makeChainable(lib,name,func) : func;\n    }\n\n    addFunction(\"evt\",MEvent);\n    addFunction(\"data\", MData);\n    addFunction(\"prop\", MProperty);\n\n    // addFunction(\"value\", MValue);\n\n    addFunction(\"count\",MCount);\n    addFunction(\"repeat\", MRepeat);\n    addFunction(\"compose\", MCompose);\n    addFunction(\"loop\", MLoop);\n    addFunction(\"take\",MTake);\n    addFunction(\"filter\",MFilter);\n    addFunction(\"skip\",MSkip);\n    addFunction(\"flatten\", MFlatten);\n    addFunction(\"map\",MMapOp);\n    addFunction(\"simpleMap\",MSimpleMap);\n    addFunction(\"mapWithMemory\",MMapWithMemory);\n    addFunction(\"branch\",MBranch);\n    addFunction(\"takeWhile\", MTakeWhile);\n    addFunction(\"skipWhile\", MSkipWhile);\n    addFunction(\"loopLength\", MLoopFixedLength);\n\n//    addFunction(\"note\",MNoteEvent);\n\n\n    addFunction(\"takeTime\",MTakeTime);\n    addFunction(\"mapTime\",MMapTime);\n    addFunction(\"pitch\",MPitch);\n    addFunction(\"velocity\",MVelocity);\n    addFunction(\"duration\",MDuration);\n    addFunction(\"eventCount\",MEventCount);\n    addFunction(\"externalProperty\", MExternalProperty);\n    addFunction(\"merge\",MTimeOrderedMerge);\n    addFunction(\"delay\",MDelay);\n    addFunction(\"time\",MTime);\n\n    addFunction(\"set\", MSet);\n    addFunction(\"setValue\", MSetValue);\n\n\n    addFunction(\"groupByTime\", MGroupTime);\n    addFunction(\"subSequence\",MSubSequence);\n    addFunction(\"removeDuplicateNotes\", MDuplicateRemover);\n\n    addFunction(\"pluck\",MPluck);\n\n    addFunction(\"swing\",MSwing);\n    addFunction(\"quantize\",MQuantize);\n    addFunction(\"toNoteOnOff\", MNoteOnOffSequence);\n    addFunction(\"metro\",MMetronome);\n    addFunction(\"timeFromDurations\", MTimeFromDurations);\n    addFunction(\"durationsFromTime\", MDurationsFromTime);\n    addFunction(\"bjorklund\",MBjorklund);\n\n    addFunction(\"notePlay\",MNoteAutomate);\n    addFunction(\"notes\",MNoteAutomate);\n    addFunction(\"automate\",MAutomate);\n    addFunction(\"log\",MLog);\n    addFunction(\"toPlayable\", MProcessAutomations);\n\n    addFunction(\"combine\",MCombine);\n    addFunction(\"combineMap\",MCombineMap);\n    //addFunction(\"play\",MPlay,false);\n    addFunction(\"toArray\",MToArray, false);\n\n    addFunction(\"withNext\", MWithNext);\n    addFunction(\"cache\", MCache);\n    return lib;\n}\n\n\nexport var m = FunctionalMusic();\n\n\n\n// var test1 = m.evt({pitch:12}).metro(10).automate(\"param1\",(n) => 0.5).delay(10);\n// var test2 = m.evt({pitch:3, velocity:0.3}).metro(4);\n// console.log(test1);\n// throw \"bye\";\n\n\n// for (var m of test1)\n//   console.log(\"test1\",m.time, m);\n// for (var m of test2)\n//   console.log(\"test2\",m.time, m);\n\n// var combined = test2.combineMap((c,other) =>  {\n//   var nextTime = null;\n//   var prevTime = null;\n//   //console.log(\"other\",other);\n//\n//   if (c.other.previous)\n//     prevTime = combine.previous.time;\n//   if (combine.next)\n//     nextTime = combine.next.time;\n//   //console.log(me, combine,\"prevTime:\",prevTime,\"nextTime\",nextTime);\n//\n//   return {pitch: nextTime == me.time ? 5: 24}\n// }, test1);\n\n// console.log(test2.combine(test1).take(5));\n// for (var c of combined.take(5))\n//   console.log(\"combined\",c);\n\n// var test1 =m.evt({pitch:20, velocity:[30,40], duration:0.5}).metro(0.25).duration([0.3,0.7])\n// .swing(0.25,0.1)\n// .map((n) => {return {velocity: n.velocity/100}})\n// .notePlay();\n\n// throw \"just terminating\";\n//\n// var simpleMelody = m.evt().set({pitch:[62,65,70,75], velocity:[0.8,0.6,0.5], duration:1.5}).metro(2)\n// // .duration((n) => {\n// // //  console.log(\"durationmap\",n);\n// //   return n.duration*200\n// // })\n// .duration((n) => {\n// //  console.log(\"durationmap\",n);\n//   return n.duration;\n// })\n// .swing(1,0.3)\n// .automate(\"pitchBend\",(n) => 1.5);\n\n\n// console.log(simpleMelody);\n\n\n\n// throw \"Byebye\";\n//\n//\n// for (var e of simpleMelody.skip(10).toPlayable().take(5)) {\n//   console.log(\"eventNoteOnOffYeeee\",e);\n// }\n\n\n// console.log(\"getting combined\");\n// for (var m of combined) {\n//\n//   console.log(\"combined\",m);\n// }\n//\n\n//var count = MTime(MCount(0,1),MLoop(MEvent({pitch:[12,13,100]})));\n//for (var c of count)\n//  console.log(c);\n//var automator = m.value([40,50]).set({duration:t.bars(1)}).timeFromDurations().automatePlay(\"pitchBend\");\n//for (var a of automator) {console.log(a);}\n//return;\n//\n//\n// //console.log(\"iteratorSymbol\",wu.iteratorSymbol);\n//\n// var val = MValue(40);\n// for (var e of val) {\n//   console.log(\"VAAL\",e);\n// }\n// //return;\n//\n// var valtest = m.value().loop().setValue([20,30,40,50]).take(5);\n// console.log(\"VAAAAAL3\",[for (e of valtest) e]);\n//\n//\n// var valToNoteTest3 = m.note({pitch:12, duration:10,time:0})\n//   .loop()\n//   .set({pitch:[12,13]})\n//   .set({velocity:[11,50,60]})\n//   .set({time: m.count(0,20), bla: (n) => {console.log(\"inSet\",n); return Math.random()}})\n//   .set({test2: m.value().loop().setValue([20,30,40,50])}).toNoteOnOff().take(5);\n// var valToNoteTest = m.note({pitch:12,duration:20}).loop().set({velocity: m.value().loop().setValue([20,30,40,50])}).take(5);\n// console.log(\"VAAAAALToNOOOTE3\",[for (e of valToNoteTest) e]);\n//\n// //return;\n//\n// var seqNewNew = m.note().loop().pitch([12,13,14]).set({bla:\"test\"}).take(5);\n// console.log(\"\"+seqNewNew);\n//\n// var tsts = m.note().loop().pitch([12,13,14]).set({bla:\"test\"}).take(5);\n//\n// console.log(\"tststs\",\"\"+tsts);\n//\n// for (var n of tsts) {\n//   console.log(\"tsts\",n);\n// }\n//\n// //return;\n//\n// //var seqNewNew2 = m.note().repeat(10).pitch([3,4,5]).velocity(100).duration([20,10,10]).eventCount().timeFromDurations().filter((e) => e.count % 5 != 0);\n\n//\n//\n// var pitchMap=wu.curryable(function(pitches,node) {\n//   return node.pitch(n => n.pitch+pitches[Math.floor(n.time/4%pitches.length)]);\n// });\n//\n// var tPitchMap=pitchMap([2,0,3,4,-12,-5,12,12]);\n// //var tPitchMap=pitchMap([0]);\n//\n// export var marimba2=tPitchMap(m.evt({pitch:50,duration:[0.2,0.1,0.3],color:\"red\",velocity:[0.9,0.7]})\n// .metro(1)\n// //.bjorklund(8,6,0)\n// .automate(\"param1\", n => (n.time+n.evt.time) % 4 /4)\n// .automate(\"pitchBend\", n => (n.time+n.evt.time) % 64 /64));\n//\n//\n// var c=0;\n// for (let e of marimba2.toPlayable()) {\n//   c++;\n//   if (c %500==0)\n//     console.log(\"m2\",c,e);\n//     if (c > 5000)\n//       break;\n//\n//     }\n//\n// c=0;\n//     for (let e of marimba2.toPlayable()) {\n//       c++;\n//       if (c %500==0)\n//         console.log(\"m2\",c,e);\n//         if (c > 5000)\n//           break;\n//         }\n//         c=0;\n//         for (let e of marimba2.toPlayable()) {\n//           c++;\n//           if (c %500==0)\n//             console.log(\"m2\",c,e);\n//             if (c > 5000)\n//               break;\n//             }\n//\n//             c=0;\n//             for (let e of marimba2.toPlayable()) {\n//               c++;\n//               if (c %500==0)\n//                 console.log(\"m2\",c,e);\n//                 if (c > 5000)\n//                   break;\n//                 }\n//                 c=0;\n","Object.defineProperties(exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.spread($__placeholder__0)","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[\n                     $traceurRuntime.toProperty(Symbol.iterator)](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }"]}