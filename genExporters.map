{"version":3,"file":"app-build/functionalM/genExporters.js","sources":["app/functionalM/genExporters.js","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"AACA;;SCDA,EAAC,cAAoB,CAAA,OAAM,AAAC,aAAkB,CACtC,CAAA,eAAqB,wBAA2B,CAAA,eAAqB,GAAK,EAAC,OAAM,cAAmB,CAD9D,AAC+D,CAAC;ADAtG,sBAAkB;AAAE,eAAW;AAGvC,kBAAkB,AAAC,CAAC,QAAS,QAAM,CAAE,IAAG;AACtC,AAAI,IAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AEJN,MAAS,GAAA,OACA,CFKD,IAAG,CGPD,eAAc,WAAW,AAAC,CDGvB,eAAc,WAAW,AAAC,CAAC,MAAK,SAAS,CAAC,CCHD,CDGG,ACHF,EDGG;AACjD,SAAgB,CACpB,EAAC,CAAC,MAAoB,CAAA,SAAqB,AAAC,EAAC,CAAC,KAAK,GAAK;MFE1D,EAAA;AAAW;AAElB,QAAE,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;IACb;EEFM;AAAA,AFGN,OAAO,IAAE,CAAC;AACZ,CAAC,CAAC;AAEF,WAAW,AAAC,CAAC,SAAU,IAAE,CAAE,IAAG,CAAG,CAAA,IAAG;AEb5B,MAAS,GAAA,OACA,CFcD,IAAG,CGhBD,eAAc,WAAW,AAAC,CDGvB,eAAc,WAAW,AAAC,CAAC,MAAK,SAAS,CAAC,CCHD,CDGG,ACHF,EDGG;AACjD,SAAgB,CACpB,EAAC,CAAC,MAAoB,CAAA,SAAqB,AAAC,EAAC,CAAC,KAAK,GAAK;MFW1D,EAAA;AAAW;AAClB,YAAM,IAAI,AAAC,CAAC,IAAG,CAAG,EAAA,CAAC,CAAC;AACpB,UAAM,EAAA,CAAC;IACT;EEXM;AAAA,AFYR,CAAC,CAAC;AAGF,AAAI,EAAA,CAAA,EAAC,EAAI,CAAA,OAAM,AAAC,CAAC,IAAG,CAAC,CAAC;AAEtB,kBAAkB,AAAC,CAAC,QAAS,MAAI,CAAE,IAAG,CAAG;AAAC,OAAO,CAAA,EAAC,WAAW,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA;AAAC,CAAC,CAAC;AAAC;AAiB5E","sourceRoot":"app-build/functionalM/","sourcesContent":["\nimport {addChainEndFunction,addGenerator} from \"./baseLib\";\n\n\naddChainEndFunction(function toArray(node) {\n  var res = [];\n  // console.log(\"iterating\",node);\n  for (var n of node) {\n    // console.log(typeof n);\n    res.push(n);\n  }\n  return res;\n});\n\naddGenerator(function* log(name, node) {\n  // console.log(\"logggging\");\n  for (var e of node) {\n    console.log(name, e);\n    yield e;\n  }\n});\n\n\nvar Rx = require(\"Rx\");\n\naddChainEndFunction(function MToRx(node) {return Rx.Observable.from(node)});;\n\n\n// var wait = require('wait.for-es6');\n//\n// var MfromRx = function*(rxObservable) {\n//   return {\n//     next: function*() {\n//       var nextVal =\n//       yield wait.for(rxObservable.onValue);\n//       return {\n//         value: nextVal,\n//         done: false\n//       };\n//     }\n//   }\n// }\n","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[\n                     $traceurRuntime.toProperty(Symbol.iterator)](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]"]}