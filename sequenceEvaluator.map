{"version":3,"file":"app-build/sequenceEvaluator.js","sources":["app/sequenceEvaluator.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/11"],"names":[],"mappings":"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","sourceRoot":"app-build/","sourcesContent":["\nvar vm = require(\"vm\");\n\nvar _ = require(\"lodash\");\n\n\nimport sandbox from \"./sequenceEvalSandbox\";\n  // var wait=require('wait.for-es6')\n\n  var testIfSeqEmitsNotes = function(sequences, sequenceSandbox) {\n\n\n    // var resSequences = vm.runInNewContext(code, sequenceSandbox, {timeout: '1000'});\n\n\n    console.log(\"seq res\".bgYellow, sequences);\n\n    // console.log(\"tester:\",testerCode);\n    return _.mapValues(sequences, seq => {\n      // var seq = sequences[seqName];\n      var res = {\n        // sequence: seq\n      };\n\n      res.isSequenceGenerator = seq.isTom;\n\n      if (!res.isSequenceGenerator)\n        return res;\n\n      var playableSequence = seq.toPlayable().take(30).takeWhile((n) => n.time < 4);\n      var testerCode = \"result = sequence.toArray()\";\n\n      console.log(\"testing playableSequence:\".bgYellow,seq, playableSequence);\n\n      try {\n        var testSeqResult = vm.runInNewContext(testerCode,{\n          traceurRuntime: $traceurRuntime,\n          sequence: playableSequence,\n          console: sequenceSandbox.console\n        }, {timeout: 1000});\n        res.playable = true;\n        res.eventSample = testSeqResult;\n      } catch(e) {\n        console.log(\"exception while trying to generate events\",e.stack,e);\n        res.playable=false;\n      }\n      return res;\n      //console.log(\"test result:\",testSeqResult);\n    });\n  }\n\n\n  export default  function evalSequences(code, loadedSequences) {\n\n    // console.log(\"creating sandbox\");\n    var sequenceSandbox = sandbox(loadedSequences);\n    // console.log(\"created sandbox\");\n\n    var sequences = null\n    var passedTests = false;\n    var error =null;\n    try {\n      // console.log(\"sequencesForLoading\", sequencePlayManager.availableSequences);\n      var availableGlobals = Object.keys(sequenceSandbox);\n      var f = new Function(...availableGlobals, \"return \"+code);\n\n      var globals = _.values(sequenceSandbox);\n      sequences = f(...globals);\n\n      console.log(\"testing if sequences emit events\", Object.keys(sequences));\n\n      var testedSequences = testIfSeqEmitsNotes(sequences,sequenceSandbox);\n      console.log(\"testedSequences\".bgYellow, testedSequences);\n      //if (_.find(tested))\n      // for (let k of Object.keys(sequences)) {\n      //   if (sequences[k].isTom) {\n      //     console.log(\"first 5 event of sequence\",sequences[k].take(5).toArray());\n      //     console.log(\"test if seq emits notes in separate worker\");\n      //     // wait.launchFiber(testIfSeqEmitsNotes, sequences[k]);\n      //   }\n      //   else\n      //     console.log(\"wasn't a sequence generator:\",k);\n      //   }\n      //   passedTests = true;\n      passedTests=testedSequences;\n    } catch(e) {\n      console.log(\"exception in live code\",e.stack);\n      error = [\"exception in live code\",e.stack];\n    }\n\n    if (sequences == null || !passedTests)\n      return [null, false, error];\n\n    return [sequences,passedTests];\n  };\n","Object.defineProperties(exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","$traceurRuntime.spread($__placeholder__0)","var $__default = $__placeholder__0"]}