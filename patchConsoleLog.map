{"version":3,"file":"app-build/patchConsoleLog.js","sources":["app/patchConsoleLog.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA;AAAA,AAAI,EAAA,CAAA,IAAG,EAAI,CAAA,OAAM,AAAC,CAAC,MAAK,CAAC,CAAC;AAE1B,AAAI,EAAA,CAAA,MAAK,EAAI,CAAA,OAAM,AAAC,CAAC,QAAO,CAAC,CAAC;AAE9B,AAAI,EAAA,CAAA,MAAK,EAAG,CAAA,OAAM,IAAI,CAAC;AAEvB,AAAI,EAAA,CAAA,iBAAgB,IAAI,SAAC,CAAA;OAAM,CAAA,CAAA,OAAO,EAAE,IAAE,CAAA,CAAI,CAAA,CAAC,CAAA,UAAU,AAAC,CAAC,CAAA,CAAE,IAAE,CAAC,CAAC,OAAO,EAAE,CAAA,KAAI,KAAK,UAAU,CAAA,CAAI,EAAA;AAAA,CAAA,CAAC;AAElG,AAAI,EAAA,CAAA,cAAa,IAAK,SAAC,CAAA,AAAS;IAAN,MAAI,6CAAE,EAAA;AAC9B,KAAI,CAAA,IAAM,UAAQ;AAChB,SAAO,CAAA,WAAU,UAAU,CAAC;AAAA,AAC9B,KAAI,MAAO,EAAA,CAAA,EAAK,SAAO;AACrB,SAAO,CAAA,KAAI,EAAI,EAAA,CAAA,CAAI,CAAA,GAAE,EAAE,CAAA,iBAAgB,AAAC,CAAC,CAAA,CAAC,CAAA,CAAE,IAAE,CAAA,CAAI,CAAA,iBAAgB,AAAC,CAAC,CAAA,CAAC,CAAC;AAAA,AACtE,KAAI,MAAO,EAAA,CAAA,EAAK,SAAO,CAAA,EAAK,CAAA,CAAA,MAAM;AAChC,SAAO,CAAA,cAAa,AAAC,CAAC,EAAC,EAAE,EAAA,CAAC,CAAC;AAAA,AAC7B,KAAI,KAAI,EAAI,EAAA,CAAA,EAAK,CAAA,MAAO,EAAA,CAAA,EAAK,SAAO,CAAA,EAAK,EAAC,IAAG,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAG;AACvD,SAAO,CAAA,IAAG,EAAE,CAAA,MAAK,KAAK,AAAC,CAAC,CAAA,CAAC,IAAI,AAAC,EAAC,SAAA,GAAE;WAAK,CAAA,GAAE,KAAK,EAAG,KAAG,CAAA,CAAI,CAAA,cAAa,AAAC,CAAC,CAAA,CAAE,GAAE,CAAC,CAAE,EAAA,CAAC;IAAA,EAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAE,KAAG,CAAC;EAClG;AAAA,AACA,OAAO,CAAA,iBAAgB,AAAC,CAAC,IAAG,QAAQ,AAAC,CAAC,CAAA,CAAE,EAAC,MAAK,CAAE,KAAG,CAAC,CAAC,CAAC,CAAC;AACzD,CAAA,CAAA;AAEA,AAAI,EAAA,CAAA,MAAK,IAAI,SAAA,KAAI;OAAK,UAAS,AAAM;ACpB7B,QAAS,GAAA,OAAoB,GAAC;AAAG,aAAoB,EAAA,CAChD,OAAoB,CAAA,SAAQ,OAAO,CAAG,OAAkB;AAC3D,eAAmC,EAAI,CAAA,SAAQ,MAAmB,CAAC;AAAA,ADmBvE,MAAA,CAAA,MAAK,EAAI,CAAA,IAAG,IAAI,AAAC,CAAC,cAAa,CAAC,CAAC;AACrC,OAAI,KAAI;AACN,WAAK,EAAI,CAAA,MAAK,IAAI,AAAC,EAAC,SAAA,CAAA;aAAK,CAAA,CAAA,CAAE,KAAI,CAAC;MAAA,EAAC,CAAC;AAAA,AACpC,SAAK,YEzBX,CAAA,eAAc,OAAO,CFyBL,MAAK,CEzBmB,EFyBjB;EACnB;AAAA,CAAA,CAAA;AAEA,MAAM,IAAI,EAAI,CAAA,MAAK,AAAC,CAAC,IAAG,CAAC,CAAC;AAC1B,MAAM,KAAK,EAAI,CAAA,MAAK,AAAC,CAAC,WAAU,CAAC,CAAC;AAClC,MAAM,MAAM,EAAI,CAAA,MAAK,AAAC,CAAC,OAAM,CAAC,CAAC;AACnC","sourceRoot":"app-build/","sourcesContent":["var util = require('util');\n\nvar colors = require('colors');\n\nvar oldLog= console.log;\n\nvar limitStringLength = (s) => s.length>500 ? (s.substring(0,500)).yellow+\"...\".bold.underline : s;\n\nvar toStringForLog =  (a, depth=1) => {\n  if (a === undefined)\n    return \"undefined\".bgMagenta;\n  if (typeof a == \"string\")\n    return depth > 0 ? '\"'+limitStringLength(a)+'\"' : limitStringLength(a);\n    if (typeof a == \"object\" && a.isTom)\n      return toStringForLog(\"\"+a);\n    if (depth > 0 && typeof a == \"object\" && !util.isArray(a)) {\n        return \"{ \"+Object.keys(a).map(key => key.bold+ \": \" + toStringForLog(a[key],0)).join(\", \")+\" }\";\n      }\n      return limitStringLength(util.inspect(a,{colors:true}));\n    }\n\n    var newLog = bgCol => function(...args) {\n      var mapped = args.map(toStringForLog);\n      if (bgCol)\n        mapped = mapped.map(a => a[bgCol]);\n      oldLog(...mapped);\n    }\n\n    console.log = newLog(null);\n    console.warn = newLog(\"bgMagenta\");\n    console.error = newLog(\"bgRed\");\n","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.spread($__placeholder__0)"]}