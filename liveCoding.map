{"version":3,"file":"app-build/liveCoding.js","sources":["app/liveCoding.js"],"names":[],"mappings":"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","sourceRoot":"app-build/","sourcesContent":["function run(m,t, baconParam,teoria) {\n\n//var chordProg = [\"F\",\"Fmaj7\",\"Dm7\",\"Csus4\"];\n//var chordProg = \"Dm / Am / Dm / Bb / F / C / Dm / Dm / Bb / Gm / Dm / Dm / A / A / A\".split(\" / \");\nvar chordProg = \"E7 F#7 E7 F#7 Cmaj9 A7 D9 Gmaj9 Cmaj9 F#7 b5 B7\".split(\" \");\nvar chordProgMap = (n) => {\n  var barNo = Math.floor(n.time / t.bars(1));\n  var currentChord = teoria.chord(chordProg[barNo % chordProg.length]);\n  var chordNotes = currentChord.notes().map( note => note.key());\n  var prevNote = n.pitch;\n  var transformedNote = chordNotes[(prevNote-64+(chordNotes.length*1000))%chordNotes.length]+12*Math.floor((prevNote-64)/chordNotes.length);\n  return {pitch:transformedNote};\n}\n//\n//\n// var s=m.note().duration(t.beats(1/32.0)).loop().pitch([64,65,70]).velocity([30,40,50,60,70,80,90,60,40,30,20,30])\n//               .metro(t.beats(1/4.0)).swing(t.beats(1/2.0),0.2).map(chordProgMap);\n// var s2=m.note().duration(t.beats(0.125)).loop().pitch([64,66,63,65]).velocity([30,40,50,60,70,80,90,60,40,30,20,30])\n//               .metro(t.beats(1/4.0)).swing(t.beats(1/2.0),0.05).map(chordProgMap);\n//\n// var s3=m.note({duration:t.beats(0.125), velocity: 60}).loop().velocity([20,30,40,50,55,60,65,70,75,80,82,83,84,90,100,110]).eventCount().pitch([(s)=> (s.count % 8 > 3 ? 63:62)]).metro(t.beats(1/4.0)).swing(t.beats(1/2.0),0.1).map(chordProgMap);\n//\n// var structure=m.evt().loop().set({\n//   type:            [\"peak\",\"break\",\"peak\",\"break\",\"peak\",\"outro\"],\n//   duration: t.bars(4,4, 8, 4)\n// }).timeFromDurations();\n//\n//\n//\n// var branched = structure.branch((structureEvent) => structureEvent.type == \"peak\", s.eventCount().filter(() => s.count % 6 != 0),s2);\n//\n//\n//\n//\n// // var marimba = structure.flatMap((s) => {\n// //   if (s.type == \"intro\")\n// //     return s;\n// //   if (s.type == \"break\")\n// //     return s2;\n// //   return s;\n// // });\n//\n// //play(\"test3\", s.map((s) => s.set({pitch: s.pitch+12, time: s.time - t.beats(1/6.0)}).count().filter((n)=>n.count % 3 == 0)));\n//\n// //return;\n// //play(\"test1\",testSeq);\n//\n//\n// //play(\"test2\",branched);\n// var seq44 = m.note().externalProperty(\"durationModifier\", baconParam(\"1\"), 127).loop().set({\n//   pitch: [64,63,70,68,67,69],\n//   duration: (n) => { return Math.ceil((n.durationModifier+1)/8)*t.beats(1/32)},\n//   velocity: m.value([40,70,100,80,80,0,80,90])\n// }).timeFromDurations();\n//\n// var seq45 = m.note().loop().set({\n//   pitch: m.value(m.count(70,-1)).take(7).filter((n) => n % 2==0).loop(),\n//   duration: (n) => { return Math.ceil((n.durationModifier+1)/8)*t.beats(1/32)},\n//   velocity: m.value([70,100,80,80,0,80,90,0,100,100,90,70,60,50,40,30])\n// }).timeFromDurations().duration(() => Math.random() * t.beats(1.5) ).map((n) => {velocity: ((n.time % t.bars(5))/t.bars(8)+1)/2*n.velocity}).swing(t.beats(0.5),0.07).swing(t.bars(2),0.03).map(chordProgMap);\n//\n// // for (let e of getIterator(seq44)) {\n// //   console.log(\"seq44\",e.durationModifier);\n// // }\n//\n//\n// var branched2 = structure.branch((s) => s.type == \"peak\",\n//   seq44,\n//   structure.branch((s) => s.type==\"break\",\n//    seq44.pitch(62).velocity(80,90,110).map(chordProgMap), seq44.map((s) => s.set({pitch: s.pitch+3, time:s.time+t.beats(0.25)}).map(chordProgMap))))\n//\n//\n//\n// var cSeq = m.automate(\"pitchBend\", (time,e) => Math.sin(time/t.beats(1.0))*1+64 ).set({duration:t.bars(256)}).timeFromDurations();\n//\n//\n// //for (let c of getIterator(cSeq)) {\n// //  console.log(\"continuous\",c);\n// //}\n// //console.log(\"evaluated continuous\");\n// //return;\n// //seq44.map(chordProgMap).play(OSCSequencer);\n// //seq45.map(chordProgMap).play(OSCSequencer);\n// //cSeq.play(OSCSequencer);\n//\n// console.log(\"seq45ToS \"+seq45);\n//\n// //return [seq45, cSeq];\n//\n// var valToNoteTest3 = m.note({pitch:1, duration:10})\n//   .loop()\n//   .set({pitch:[60,61,63]})\n//   //.set({pitch: m.value().count(70,-1).take(7).filter((n) => n % 2==0)})\n//   .set({velocity: m.value([70,100,80,80,0,80,90,0,100,100,90,70,60,50,40,30])})\n//   //.set(bla: (n) => {console.log(\"inSet\",n); return Math.random()}})\n//   .set({test2: m.value().loop().setValue([20,30,40,50])}).metro(t.beats(1/2.0)).swing(t.beats(0.5),0.07);\n//\n// var valToNoteTest = m.note({pitch:60,duration: t.beats(0.2), velocity:100,time:0}).loop()\n//   .set({velocity: m.value([70,100,80,80,0,80,90,0,100,100,90,70,60,50,40,30]).loop()})\n//   .set({test2: m.value().loop().setValue([20,30,40,50])})\n//   .pitch([68,65,73]).metro(t.beats(1/8.0)).duration(() => Math.random() * t.beats(1.5) ).map(chordProgMap).swing(t.beats(0.5),0.07);\n// //console.log(\"LIVECODE: VAAAAALToNOOOTE3\",[for (e of valToNoteTest3) e]);\n//\n// var seq46 = m.note({pitch:50}).externalProperty(\"durationModifier\", baconParam(\"1\"), 127).loop().set({\n//   pitch: 60,//m.value().count(75,-1).take(5).filter((n) => n % 1==0),\n//   baseDuration: t.beats(4),//(n) => { return Math.ceil((n.durationModifier+1)/8)*t.beats(1/32)},\n//   velocity: m.value([70,100,80,80,2,80,90,30,100,100,2,70,60,1,40,30,2])\n// })\n// .duration((n) => n.baseDuration)\n// .timeFromDurations()\n// .duration((n) => n.baseDuration/2 )\n// .set((n) => {velocity: ((n.time % t.bars(5))/t.bars(8)+1)/2*n.velocity})//.swing(t.beats(0.5),0.07)\n// //.velocity(100)\n// .set((n) => {time: n.time+t.beats(0)})//.swing(1/4, 0.4);\n// //.swing(t.beats(0.5),0.1)\n// .map(chordProgMap);\n// ;\n//\n// var seqsimple = m.note({pitch:62,velocity:100, duration:t.beats(1/16)}).loop().pitch([66,65,67,72,68,59]).velocity([80,80,0,80,60,0,20,0,50,0,90,80,0,20,40])\n// .metro(t.beats(1/4))\n// .duration(t.beats(1/8))\n// .delay(t.beats(1/4))\n// .velocity((n) => n.velocity +1)\n// .map(chordProgMap)\n// .swing(t.beats(0.25),0.15);\n//\n// var cSeq = m.automate(\"pitchBend\", (time,e) => Math.sin(time/t.beats(1.0))*30+64 ).set({duration:t.bars(1)}).loop().timeFromDurations();\n//\n//\n// var simple666 = m.note({pitch:73,velocity:5}).loop()\n// .pitch([73,70,74,77,60])\n// .metro(t.beats(2))\n// .duration(t.beats(0.25))\n// .velocity((n) => n.time % t.bars(8)/t.bars(8)*50+n.velocity)\n// .map(chordProgMap)\n// .delay(t.bars(1/3));\n// //console.log(c2\n\nvar cSeq = m.value((time,e) => {console.log(\"tim\",time,time/t.beats(4) ); return Math.sin(time/t.beats(16)*2*Math.PI)*3+64;} ).set({duration:t.bars(0.5)}).loop().timeFromDurations().automatePlay(\"pitchBend\");\n\nvar seqsimple = m.evt({pitch:64,duration:t.beats(1/3), velocity:100}).loop().metro(t.beats(1/4));//.delay(t.beats(1/2)).pitch([70,70,65,68,62,61,62,64,65,66,70,68]).velocity([0,80,0,70,0,60,59,0,70,22,0,44,55])\n//.map((n) => [n\n// ,{pitch:n.pitch+1}\n//])\n//.swing(t.beats(0.25),0.1).map(chordProgMap).notePlay();\n\nvar s2 = m.evt({pitch:64,duration: t.beats(1), velocity:100}).loop().metro(t.beats(2));\n\nvar structure = m.evt().repeat(5).set({\n  name: [\"intro\",\"break\",\"peak\",\"break\",\"intro\"],\n  duration: t.bars(4,2,4,2,4)\n});\n\n//for (let s of structure)\n//  console.log(s);\n\n\n\n//for (let s of structure)\n//  console.log('struct',s);\n//return;\n\n\n//var structured = structure.time((s) => s.time-t.bars(0.5)).branch((s) => ])\nreturn [\n//seqsimple.pitch((n) => n.pitch+24).delay(t.beats(0.125)),\n//simple666\n//cSeq,\nstructure.map((s) => s.name==\"peak\" ? seqsimple : s2)\n//seqsimple.pitch((n) => n.pitch+12).delay(t.beats(0.25))\n];\n\n}\n\n//console.log(\"bla\");\n\nmodule.exports = {run:run};\n"]}