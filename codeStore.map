{"version":3,"file":"app-build/codeStore.js","sources":["app/codeStore.js","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"AACA;ACDA,KAAK,iBAAiB,AAAC,CAAC,OAAM;WCA9B,EAAC,GAAE,YCAqB;AAAE,sBAAwB;IAAE,ADA9B,CAAC;iBAAvB,EAAC,GAAE,YCAqB;AAAE,4BAAwB;IAAE,ADA9B,CAAC;aAAvB,EAAC,GAAE,YCAqB;AAAE,wBAAwB;IAAE,ADA9B,CAAC;AEAvB,WAAS,CCAT,EAAC,KAAI,CDAO,KAAG,ACAS,CAAC;CJAyB,CAAC;ADCnD,AAAI,EAAA,CAAA,KAAI,EAAI,CAAA,OAAM,AAAC,CAAC,SAAQ,CAAC,CAAC;AAK9B,AAAI,EAAA,CAAA,WAAU,EAAI,aAAW,CAAC;AAE9B,AAAI,EAAA,CAAA,EAAC,EAAG,CAAA,OAAM,AAAC,CAAC,IAAG,CAAC,CAAC;AAEd,AAAI,EAAA,CAAA,SAAQ,EAAI,EACrB,GAAE,CAAG,UAAS,UAAS,CAAG;AACxB,MAAI;AACF,WAAO,CAAA,EAAC,aAAa,AAAC,CAAC,WAAU,EAAE,IAAE,CAAA,CAAE,WAAS,CAAA,CAAE,MAAI,CAAE,OAAK,CAAC,CAAC;IACjE,CACA,OAAO,CAAA,CAAE,GAAC;AAAA,AAAC,IAAA;AACX,SAAO,KAAG,CAAC;EACb,CACF,CAAA;AAEO,AAAI,EAAA,CAAA,eAAc,EAAI,CAAA,EAAC,YAAY,AAAC,CAAC,WAAU,CAAC,IAClD,AAAC,EAAC,SAAA,QAAO;OAAK,EAAC;AAAC,OAAG,CAAE,CAAA,EAAC,aAAa,AAAC,CAAC,WAAU,EAAE,IAAE,CAAA,CAAE,SAAO,CAAE,OAAK,CAAC;AAAG,SAAK,CAAG,CAAA,QAAO,QAAQ,AAAC,CAAC,KAAI,CAAE,GAAC,CAAC;AAAA,EAAC,CAAC;AAAA,EAAC,CAAC;AAEjH,MAAM,IAAI,AAAC,CAAC,EAAC,YAAY,AAAC,CAAC,WAAU,CAAC,CAAE,gBAAc,CAAC,CAAC;AAGjD,AAAI,EAAA,CAAA,WAAU,EAAI,IAAI,CAAA,KAAI,IAAI,AAAC,EAAC,CAAC;AAKxC,UAAU,QAAQ,AAAC,EAAC,SAAC,CAAA,CAAM;AAEzB,QAAM,IAAI,AAAC,CAAC,SAAQ,CAAE,EAAA,CAAC,CAAC;AACxB,AAAI,IAAA,CAAA,IAAG,EAAI,CAAA,WAAU,EAAE,IAAE,CAAA,CAAE,CAAA,CAAA,OAAO,CAAA,CAAE,MAAI,CAAC;AACzC,GAAC,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,CAAA,KAAK,CAAE,OAAK,CAAC,CAAC;AAIvC,EAAC,CAAC;AACF","sourceRoot":"app-build/","sourcesContent":["\nvar Bacon = require(\"baconjs\");\n\n// var nStore = require(\"nstore\");\n// nStore = nStore.extend(require('nstore/query')());\n\nvar liveCodeDir = \"./liveCode\";\n\nvar fs =require(\"fs\");\n\nexport var codeStore = {\n  get: function(deviceName) {\n    try {\n      return fs.readFileSync(liveCodeDir+\"/\"+deviceName+\".js\",'utf8');\n    }\n    catch (e){};\n    return null;\n  }\n}\n\nexport var storedSequences = fs.readdirSync(liveCodeDir)\n  .map(fileName => ({code:fs.readFileSync(liveCodeDir+\"/\"+fileName,'utf8'), device: fileName.replace(\".js\",\"\")}));\n\nconsole.log(fs.readdirSync(liveCodeDir),storedSequences);\n// throw \"heeey\";\n\nexport var baconStorer = new Bacon.Bus();\n\n\n// export var baconStoreChanged = new Bacon.Bus();\n\nbaconStorer.onValue((s) => {\n//  return;\n  console.log(\"storing\",s);\n  var path = liveCodeDir+\"/\"+s.device+\".js\";\n  fs.writeFileSync(path, s.code,'utf8');\n\n  // codeStore.save(s.device, s.code, function(err) {console.log(\"stored code\", s);})\n\n});\n","Object.defineProperties(exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}"]}