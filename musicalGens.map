{"version":3,"file":"app-build/functionalM/musicalGens.js","sources":["app/functionalM/musicalGens.js","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","sourceRoot":"app-build/functionalM/","sourcesContent":["\n\nvar _ = require(\"lodash\");\n\nimport {wu} from \"../lib/wu\";\n\nimport {addGenerator,m} from \"./baseLib\";\n\nvar SortedMap = require(\"collections/sorted-map\");\n\nimport {\n  prettyToString, toStringObject, toStringDetailed, addFuncProp, /*clone, addObjectProp, addObjectProps, */ isIterable, getIterator, fixFloat\n}\nfrom \"../lib/utils\";\n\nimport {\n  immutableTom as immutableObj, addObjectProp, addObjectProps, addLazyProp\n} from \"../immutable/nodeProxiedImmutable\";\n\n\n\n\n\naddGenerator(function* withNext(node) {\n  var me = null;\n  for (var n of node) {\n    if (me == null) {\n      me = n;\n      continue;\n    }\n    // // console.log({me:me,next:n, time:me.time });\n    yield addObjectProps(me, {\n      next: n\n    });\n    me = n;\n  }\n});\n\n\n\nconst iterableWithTime=function(iterable, time) {\n\n  var res = {[wu.iteratorSymbol]: getIterator(iterable), time:time};\n  res.toString = () => \"Timegrouped t:\"+time+\" (\"+iterable+\")\";\n  res.length = iterable.length;\n  return res;\n}\n\naddGenerator(function* groupByTime(node) {\n  var currentTime = -1;\n  var grouped = [];\n  //// console.log(\"\"+node);\n  for (var n of node) {\n    if (!n.hasOwnProperty(\"time\")) {\n      console.error(\"groupByTime called but no time property\".red);\n      return;\n    }\n    if (n.time > currentTime) {\n      if (grouped.length > 0) {\n        yield iterableWithTime(grouped, currentTime);\n        grouped = [];\n      }\n      currentTime = fixFloat(n.time);\n    }\n    grouped.push(n);\n  }\n});\n\naddGenerator(function* removeDuplicateNotes(node) {\n  for (var timeGrouped of m(node).groupByTime()) {\n    for (var n of _.values(_.groupBy(timeGrouped, \"pitch\")))\n      yield n[n.length - 1]; // last one... could be first too\n  }\n});\n\n\n\n\n// lazy mapping that can be evaluated later (for automations for example)\n// and to skip from a certain point in time\naddGenerator(function* lazyMap(name, mapFunc,node) {\n  // var lazyFunc = (obj) => { var resFunc = mapFunc(obj);  return resFunc;}\n  // lazyFunc.isLazy = true;\n  // yield* m(node).simpleMap(n => n.set(name,lazyFunc));\n  for (let n of node) {\n    var newN = addLazyProp(n, name, mapFunc);\n    // console.log(\"after adding lazy func\", newN);\n    yield newN;\n  }\n\n});\n\n\nvar lazyProps = (n) => Object.keys(n).filter(k => n[k].isLazy);\n\naddGenerator(function* lazyResolve(node) {\n  // // console.log(\"should be\",m(node).take(1).toArray()[0].automation_param1.isLazy);\n  // // console.log(\"should be\".bold,\"\"+lazyProps(m(node).take(1).toArray()[0]));\n  var mapped = m(node).map(n => {\n    // // console.log(n.automation_param1,lazyProps(n));\n    var res = lazyProps(n).map(k => n[k]).map(autoSeq => autoSeq(n));\n\n\n\n    var merged=res.reduce((prev,next) => {\n      return m(prev).merge(next);\n    },[n]);\n    // debugger;\n    // console.log(\"----------\".bgBlack);\n    // console.log(\"merged\", merged.toArray());\n    // console.log(\"----------\".bgBlack);\n\n    // var m(res[0]).toArray());\n    return merged;//.simpleMap(n => n());\n  });\n  // // console.log(\"toA\",mapped.toArray().map(n => \"\"+n));\n  //.flattenAndSchedule();//.merge(node);\n  // // console.log(m(node).simpleMap(lazyProps).toArray().map(n => n));\n  yield* getIterator(mapped);\n});\n\n\n\nvar isNote = n => n.hasOwnProperty(\"pitch\") && n.hasOwnProperty(\"velocity\") && n.hasOwnProperty(\"time\") && n.duration > 0;\n\naddGenerator(function* notePlay(node) {\n\n  // // console.log(MToArray(MTake(2,notes)));\n  // // console.log(\"notes\", m.data(notes).take(5).toArray());\n  yield * getIterator(m(node).filter(isNote).lazyMap(\"automation_noteOnOff\",n =>\n      [{\n        type: \"noteOn\",\n        velocity: n.velocity,\n        pitch: n.pitch,\n        duration: n.duration,\n        time: n.time\n      }, {\n        type: \"noteOff\",\n        pitch: n.pitch,\n        time: n.time+n.duration\n      }]\n  ));\n})\n\n\n\n// TODO: THIS is only a  template for creating automations from notes with durations. many other possibilities. check this\n//TODO: figure out how to deal with automations of notes that overlap in duration. at the moment automations are overlapping\naddGenerator(function* automate(paramName, valGenerator, node) {\n  // // console.log(\"automate\".bgRed,paramName,valGenerator);\n  yield * getIterator(m(node).filter(isNote).lazyMap(\"automation_\"+paramName,(n) => {\n\n    // // console.log(\"lazymap\",paramName, valGenerator, \"noteeeee\".red.bold+\"  \",n);\n    var automation = m().evt({\n        type: \"automation\",\n        target: n,\n        name: paramName,\n        duration: n.duration\n      })\n      .duration(n.duration)\n      .loop()\n      .metro(1/8)\n      .takeWhile(a => a.time < n.duration)\n      .simpleMap(n => n.set(\"automationVal\", valGenerator(n)))\n      .delay(n.time)\n\n      // .delay(n.time)\n      // .take(2)\n\n    // // console.log(\"created automation\", automation.toArray(), \"from\",n);\n    // // console.log(automation.toArray());\n    return automation;\n  }));\n});\n\n\n\naddGenerator(function* toPlayable(node) {\n  yield * getIterator(\n    m(node).notePlay().lazyResolve().flattenAndSchedule()\n  )\n})\n\n\n\naddGenerator(function* setValue(value, child) {\n  yield* child.prop(\"value\", value, child);\n});\n\n\n\naddGenerator(function* combine(combineNode, node) {\n  var combineFunc = (me, previousOther, nextOther) => addObjectProps(me, {\n    previous: previousOther,\n    next: nextOther\n  });\n  var meMapped = m(node).simpleMap((n) => {\n    return {\n      time: n.time,\n      me: n\n    }\n  });\n  var otherMapped = m(combineNode).simpleMap((n) => {\n    return {\n      time: n.time,\n      other: n\n    }\n  });\n  var merged = otherMapped.merge(meMapped);\n  // for (var test of merged)\n  //   // console.log(\"mergedSeq\", test);\n  var previousOther = null;\n  var nextOther = null;\n  var meWaitingForNextOther = [];\n  for (var m of merged) {\n    // // console.log(\"combining\",m);\n    if (m.hasOwnProperty(\"me\"))\n      meWaitingForNextOther.push(m.me);\n    if (m.hasOwnProperty(\"other\") && meWaitingForNextOther.length > 0) {\n      previousOther = nextOther;\n      nextOther = m.other;\n      for (var me of meWaitingForNextOther) {\n        yield combineFunc(me, previousOther, nextOther);\n      }\n      meWaitingForNextOther = [];\n    }\n  }\n  for (var me of meWaitingForNextOther) {\n    yield combineFunc(me, previousOther, nextOther);;\n  }\n});\n\naddGenerator(function* combineMap(combineFunc, combineNode, node) {\n  // here we could add time diffs to parameters of combineFunc\n  yield * getIterator(\n    m(node).combine(combineNode).map((combined) => combineFunc(combined, combined.other))\n  );\n});\n\n\n\n\n\n\n\n\naddGenerator(function* loopLength(loopLength, node) {\n  var time = 0;\n  while (true) {\n    for (var n of node) {\n      //  // console.log(\"looplengtime\",time);\n      yield addObjectProp(n, \"time\", time + n.time);\n    }\n    time += loopLength;\n  }\n});\n\n\n\nvar convertToObject = (externalVal) => immutableObj(externalVal);\n\n\n\naddGenerator(function* flattenAndSchedule(node) {\n  // var outerIterator = getIterator(node);\n  var scheduled = {};\n  for (var n of node) {\n    var minTime = Infinity;\n    if (isIterable(n)) {\n      for (let nFlat of n) {\n        var time = nFlat.time;\n        if (time < minTime)\n          minTime = time;\n\n        // if (!scheduled[time))\n        (scheduled[time] = scheduled[time] || []).push(nFlat);\n\n        // scheduled.get(time).push(nFlat);\n        // // console.log(\"nFlat\",nFlat,\"scheduled\",scheduled.entries());\n        // bucket.push(nFlat);\n\n      }\n    }\n    else {\n      yield n;\n      minTime = n.time;\n    }\n    // // console.log(scheduled);\n\n    // // console.log(minTime, scheduled);\n    // var sIterator = scheduled.iterator();\n    for (let k of _.filter(Object.keys(scheduled), (k) => k < minTime )) {\n      // // console.log(scheduled[k]);\n      // // console.log(\"k\",k);\n      if (k < minTime) {\n        // // console.log(\"yielding\",k,scheduled[k]);\n        yield* getIterator(scheduled[k]);\n        // scheduled.delete(s.time);\n        delete scheduled[k];\n      }\n\n    }\n\n\n  }\n});\n\n\n\n// cases:\n// 1: mapFunc returns an iterable\n// - flatten and schedule returned elements\n// 2: mapFunc returns one element\n// - just simpleMap\n// both same actually\n\n\n\naddGenerator(function* map(mapFunc, node) {\n\n  var mapped = m(node).simpleMap(mapFunc);\n\n  yield* getIterator(mapped.flattenAndSchedule());\n\n});\n\n\n\n\n\n\n\n//\n// // somehow like sequencer\n// var MCombineLast = mGenerator(function*(combineFunc, combineNode, node) {\n//   var meIterator = getIterator(node);\n//   //var meNext = null;\n//   var last = meIterator.next().value;\n//   for (var c of combineNode) {\n//     var next = meIterator.next();\n//     if (next.time < c.time) {\n//       last = next;\n//       continue;\n//     }\n//     yield combineFunc(last, next, combineNode);\n//\n//     last = next;\n//   }\n// });\n//\n\n\n\n\naddGenerator(function* subSequence(subSeq, node) {\n  // change yield* to iterating through subSequence\n  yield * node;\n  yield * subSeq;\n});\n\n\n\naddGenerator(function* pluck(propertyName, node) {\n  yield * getIterator(m(node).simpleMap(e => e[propertyName], node))\n});\n\n\n\naddGenerator(function* memoryMap(initial, mapFunc, node) {\n  var current = initial;\n  yield * getIterator(m(initial));\n  for (var e of node) {\n    current = mapFunc(current, e.value);\n    //  // console.log(\"current\",current);\n    yield * getIterator(m(e).set(m(current)));\n  }\n});\n\n\n\n\naddGenerator(function* takeTime(time, node) {\n  var timeTaken = 0;\n  for (var e of node) {\n    yield e;\n    timeTaken += e.event.duration;\n    if (timeTaken >= time)\n      break;\n  }\n});\n\n\n// // TODO: possible duplicate of time??\n// addGenerator(function* mapTime(mapFunc, node) {\n//   for (var e of node) {\n//     yield e.set(\"time\",mapFunc(e.time));\n//   }\n// });\n\n// addGenerator(function* delay(amount, node) {\n//   // console.log(\"delaying\",node)\n//   yield* getIterator(node.time(n => {\n//     // console.log(\"nnn\",n,amount,n);\n//     return n.time + amount;\n//   }));\n// });\n//\n\naddGenerator(function* durationSum(node) {\n  yield* getIterator(node.reduce((sum, timedEvent) => sum + timedEvent.duration, 0));\n});\n\n\n\n\naddGenerator( function* branch(condition, branchNode, elseNode, node) {\n  for (var e of node) {\n    //// console.log(\"branching\", condition, e);\n    var branchTo = (condition(e) ? branchNode : elseNode);\n\n    //// console.log(e,branchTo.set);\n    yield * getIterator(branchTo.takeWhile((n) => n.time < e.duration).set({\n      time: (n) => n.time + e.time\n    }));\n    //yield* getIterator(branchTo\n    //  .takeWhile((n) => n.time < e.duration)\n    //  .set((n) => {time: n.time+e.time})\n    //);\n  }\n});\n\n\n\naddGenerator(function* endMarker() {\n  yield {\n    type: \"endMarker\"\n  };\n});\n\nvar propSetter= (name) => {\n  var func = function*(value, node) {\n    yield* getIterator(m(node).prop(name,value));\n  };\n  // func.displayMame =name;\n  return func;\n};\n\naddGenerator(propSetter(\"pitch\"),{nameOverride:\"pitch\"});\n\naddGenerator(propSetter(\"velocity\"),{nameOverride:\"velocity\"});\n\naddGenerator(propSetter(\"time\"),{nameOverride:\"time\"});\n\naddGenerator(propSetter(\"duration\"),{nameOverride:\"duration\"});\n\naddGenerator(function* eventCount(node) {\n  // // console.log(\"nnnode\",node);\n  yield* getIterator(m(node).prop(\"count\",m().count(0,1)))\n});\n// addGenerator(propSetter(\"count\", MCount(0, 1));\n\naddGenerator(function* delay(amount, node) {\n  // console.log(\"delaying\",amount, node);\n  // if (!isIterable(amount))\n  //   amount = [amount];\n  //\n  // for (var a of amount)\n    yield * getIterator(m(node).simpleMap(n => n.set(\"time\",amount+n.time)));\n});\n\n\n// maybe possible to modify event properties to have iterables with time somehow connecting to time of external events\naddGenerator(function* externalProp(propName, baconProp, initialVal, node) {\n  var propVal = initialVal;\n  // set up bacon listener\n  baconProp.onValue(function(v) {\n    // console.log('new param val', propName, v);\n    propVal = v;\n  });\n  var res = node.prop(propName, () => propVal);\n  yield * getIterator(res);\n}, {toStringOverride:\"externalProp\"});\n\nvar endMarker = m().endMarker();\n\naddGenerator(function* metro(tickDuration, node) {\n  // console.log(\"timtimtim\",m(node).set({time:m().count(0,tickDuration)}).take(5).toArray());\n  yield* getIterator(m(node).set({time:m().count(0,tickDuration)}));\n});\n\n\naddGenerator(function* timeFromDurations(node) {\n  var durationSumIterator = node.pluck(\"duration\").memoryMap(0, (current, x) => x + current);\n  yield * getIterator(endMarker.compose(node).time(durationSumIterator));\n});\n\n\naddGenerator(function* durationsFromTime(node) {\n  var i = getIterator(node);\n  var previous = undefined;\n  while (true) {\n    var next = i.next().value;\n    if (next === undefined)\n      return;\n    if (previous != undefined && previous.hasOwnProperty(\"time\") && next.hasOwnProperty(\"time\")) {\n      yield addObjectProps(previous, {\n        duration: next.time - previous.time - 0.01\n      });\n    }\n    previous = next;\n  }\n});\n\n// var MInsertWhen = MDirectOp(\n//   function* (nodeIterator, insertCondition, insertNode) {\n//     for (var e of nodeIterator) {\n//       if (insertCondition(e))\n//         yield* insertNode;\n//       yield e;\n//     }\n//   }\n// )\n\n\n// before insert, could make explicit\n//var MInsertOnce = (insertCondition, insertNode, node) => MCompose(MTakeWhile(e => !insertCondition(e),node), insertNode, MSkipWhile(e => !insertCondition(e),node));\n\n\n// Time ordered merge\naddGenerator(function* merge(mergeNode, node) {\n  var nodeIterator = getIterator(node);\n  var nextNode = nodeIterator.next().value;\n  for (var mergeEvent of mergeNode) {\n    while (nextNode != undefined && nextNode.time < mergeEvent.time) {\n      yield nextNode;\n      nextNode = nodeIterator.next().value;\n    }\n    yield mergeEvent;\n  }\n  if (nextNode != undefined)\n    yield nextNode;\n  yield * nodeIterator;\n});\n\n\n\n\n\naddGenerator(function* swing(timeGrid, amount, node) {\n  // console.log(\"swinging\",timeGrid, amount, node);\n  yield * getIterator(m(node).time((e) => {\n    // // console.log(\"swing, mapping,\",e);\n    var diff = (e.time % (timeGrid * 2)) / timeGrid - 1;\n\n    var dist = diff * diff;\n    // // console.log(\"swing\", {time: fixFloat(e.time + amount * (1-dist) * timeGrid)});\n    return fixFloat(e.time + amount * (1 - dist) * timeGrid);\n  } ))\n});\n\naddGenerator(function* quantize(timeGrid, amount, node) {\n  yield * getIterator( node.time((e) => {\n    // // console.log(\"swing, mapping,\",e);\n    var diff = (e.time % (timeGrid * 2)) / timeGrid - 1;\n\n\n    // // console.log(\"swing\", {time: fixFloat(e.time + amount * (1-dist) * timeGrid)});\n    return fixFloat(e.time - amount * diff);\n  }, node))\n});\n\n\naddGenerator(function* bjorklund(steps, pulses, rotation, node) {\n  var pattern = bjorklundMaker(steps, pulses);\n  var counter = rotation;\n  if (pattern.length == 0)\n    pattern = [1];\n  for (var n of node) {\n\n    if (pattern[counter++ % pattern.length]) {\n      yield n;\n    }\n  }\n});\n\nfunction bjorklundMaker(steps, pulses) {\n  steps = Math.round(steps);\n  pulses = Math.round(pulses);\n\n  if (pulses > steps || pulses == 0 || steps == 0) {\n    return new Array();\n  }\n\n  var pattern = [],\n    counts = [],\n    remainders = [],\n    divisor = steps - pulses;\n  remainders.push(pulses);\n  var level = 0;\n\n  while (true) {\n    counts.push(Math.floor(divisor / remainders[level]));\n    remainders.push(divisor % remainders[level]);\n    divisor = remainders[level];\n    level += 1;\n    if (remainders[level] <= 1) {\n      break;\n    }\n  }\n\n  counts.push(divisor);\n\n  var r = 0;\n  var build = function(level) {\n    r++;\n    if (level > -1) {\n      for (var i = 0; i < counts[level]; i++) {\n        build(level - 1);\n      }\n      if (remainders[level] != 0) {\n        build(level - 2);\n      }\n    } else if (level == -1) {\n      pattern.push(0);\n    } else if (level == -2) {\n      pattern.push(1);\n    }\n  };\n\n  build(level);\n  return pattern.reverse();\n}\n","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[\n                     $traceurRuntime.toProperty(Symbol.iterator)](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]"]}